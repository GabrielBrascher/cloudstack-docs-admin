# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Apache CloudStack Administration Documentation package.
# 
# Translators:
# renoshen <shenkuan-ghq@sinosig.com>, 2014
msgid ""
msgstr ""
"Project-Id-Version: Apache CloudStack Administration RTD\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-03-31 14:08-0400\n"
"PO-Revision-Date: 2014-05-26 08:46+0000\n"
"Last-Translator: renoshen <shenkuan-ghq@sinosig.com>\n"
"Language-Team: Chinese (China) (http://www.transifex.com/projects/p/apache-cloudstack-administration-rtd/language/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 42f93e7b838b4f629ef21f938464dbc1
#: ../../reliability.rst:18
msgid "System Reliability and High Availability"
msgstr "系统可靠性与高可用性"

# d4f935885bde4f5fa5bd434efc73f99d
#: ../../reliability.rst:21
msgid "HA for Management Server"
msgstr "管理服务器的HA"

# e5b86e788b984534a8773e9b0e137860
#: ../../reliability.rst:23
msgid ""
"The CloudStack Management Server should be deployed in a multi-node "
"configuration such that it is not susceptible to individual server failures."
" The Management Server itself (as distinct from the MySQL database) is "
"stateless and may be placed behind a load balancer."
msgstr "CloudStack管理服务器可以部署为多节点的配置，使得它不容易受到单个服务器故障影响。管理服务器(不同于MySQL数据库)本身是无状态的，可以被部署在负载均衡设备后面。"

# 931b292dc1f74dbd9e98310a33755f2e
#: ../../reliability.rst:28
msgid ""
"Normal operation of Hosts is not impacted by an outage of all Management "
"Serves. All guest VMs will continue to work."
msgstr "停止的所有管理服务不会影响主机的正常操作。所有来宾VM将继续工作。"

# 53c840831c6a4a97abe49f13dd6971fe
#: ../../reliability.rst:31
msgid ""
"When the Management Server is down, no new VMs can be created, and the end "
"user and admin UI, API, dynamic load distribution, and HA will cease to "
"work."
msgstr "当管理主机下线后，不能创建新的VMs、最终用户，管理UI、API、动态负载以及HA都将停止工作。"

# e2cde8cb07bc44a6910e13f99d712af1
#: ../../reliability.rst:36
msgid "Management Server Load Balancing"
msgstr "管理服务器负载均衡"

# 40b039f7bb73453883a04bd362d24d0f
#: ../../reliability.rst:38
msgid ""
"CloudStack can use a load balancer to provide a virtual IP for multiple "
"Management Servers. The administrator is responsible for creating the load "
"balancer rules for the Management Servers. The application requires "
"persistence or stickiness across multiple sessions. The following chart "
"lists the ports that should be load balanced and whether or not persistence "
"is required."
msgstr "CloudStack可以使用负载均衡器为多管理服务器提供一个虚拟IP。管理员负责创建管理服务器的负载均衡规则。应用程序需要跨多个持久性或stickiness的会话。下表列出了需要进行负载平衡的端口和是否有持久性要求。"

# 8245b999edf543b8b855b4b82d1265b2
#: ../../reliability.rst:45
msgid "Even if persistence is not required, enabling it is permitted."
msgstr "即使不需要持久性，也使它是允许的。"

# b04bd18b0d6a453da2ac167e9125242a
#: ../../reliability.rst:48
msgid "Source Port"
msgstr "源端口"

# ebb2d9d219f340f4b0093d48ed13ae6a
#: ../../reliability.rst:48
msgid "Destination Port"
msgstr "目标端口"

# 31d3c75bdca44069961fd1d368c585ce
#: ../../reliability.rst:48
msgid "Protocol"
msgstr "协议"

# 39f21fee6f9a4961bb1505eeb987cb10
#: ../../reliability.rst:48
msgid "Persistence Required?"
msgstr "持续请求"

# 8d5dca5870cd499b8c812aaec487689f
#: ../../reliability.rst:50
msgid "80 or 443"
msgstr "80或者443"

# 288469eaaf774c19a13c8fe7c98b96f9
#: ../../reliability.rst:50
msgid "8080 (or 20400 with AJP)"
msgstr "8080 (或者 20400 with AJP)"

# dbee0ed7df2d4c69966a3470fcda672d
#: ../../reliability.rst:50
msgid "HTTP (or AJP)"
msgstr "HTTP (或者AJP)"

# 93f39d72b22a47079b7592a8cae8c45f
# f3f32f1a6d394b3fa117251394a644fb
#: ../../reliability.rst:50 ../../reliability.rst:51
msgid "Yes"
msgstr "支持"

# c0aabddc4c074140b57cb568da9e53b3
# 8fd23a1c5df9479d9afd5712e0002a06
#: ../../reliability.rst:51 ../../reliability.rst:51
msgid "8250"
msgstr "8250"

# 85c5e2e6a7fd4b50bd15b6abcaa54b68
#: ../../reliability.rst:51
msgid "TCP"
msgstr "TCP"

# af8641ff7dea44debac63cb552e1eba2
# 0400986df3d04ae68ba993a8b0e52af9
#: ../../reliability.rst:52 ../../reliability.rst:52
msgid "8096"
msgstr "8096"

# 163b9f4609284288aa510edc22883546
#: ../../reliability.rst:52
msgid "HTTP"
msgstr "HTTP"

# 0e1c03c950fe4e3e858d6bb9a5fc20d2
#: ../../reliability.rst:52
msgid "No"
msgstr "不支持"

# c0703d8275f042169efecb8f1c34e24e
#: ../../reliability.rst:55
msgid ""
"In addition to above settings, the administrator is responsible for setting "
"the 'host' global config value from the management server IP to load "
"balancer virtual IP address. If the 'host' value is not set to the VIP for "
"Port 8250 and one of your management servers crashes, the UI is still "
"available but the system VMs will not be able to contact the management "
"server."
msgstr "除了上面的设置，管理员还负责设置‘host’全局配置值，由管理服务器IP地址更改为负载均衡虚拟IP地址。如果‘host’值未设置为VIP的8250端口并且一台管理服务器崩溃时，用户界面依旧可用，但系统虚拟机将无法与管理服务器联系。"

# 1d47e0a3a4304c5688d0eab5f738a7d1
#: ../../reliability.rst:63
msgid "HA-Enabled Virtual Machines"
msgstr "启用了HA的虚拟机"

# 988f2b0a1cee49ad8e2adff19be0e125
# 949f6e66114f428586d4157ff19ae45f
#: ../../reliability.rst:65 ../../reliability.rst:81
msgid ""
"The user can specify a virtual machine as HA-enabled. By default, all "
"virtual router VMs and Elastic Load Balancing VMs are automatically "
"configured as HA-enabled. When an HA-enabled VM crashes, CloudStack detects "
"the crash and restarts the VM automatically within the same Availability "
"Zone. HA is never performed across different Availability Zones. CloudStack "
"has a conservative policy towards restarting VMs and ensures that there will"
" never be two instances of the same VM running at the same time. The "
"Management Server attempts to start the VM on another Host in the same "
"cluster."
msgstr "用户可以给指定的虚拟机开启高可用特性。默认情况下所有的虚拟路由虚拟机和弹性负载均衡虚拟机自动开启了高可用特性。当CloudStack检测到开启了高可用特性的虚拟机崩溃时将会在相同的可用资源与中自动重新启动该虚拟机。高可用特性不会跨资源域执行。CloudStack采用比较保守的方式重启虚拟机，以确使不会同时运行两个相同的实例。管理服务器会尝试在本集群的另一台主机上开启该虚拟机。"

# 6dfc9dedb8e8424cb2e303f598a5b0ef
# ceb436b58de14beba4dd06668804afaa
#: ../../reliability.rst:75 ../../reliability.rst:91
msgid ""
"HA features work with iSCSI or NFS primary storage. HA with local storage is"
" not supported."
msgstr "高可用特性只在使用iSCSI和NFS做主存储的时候才可以使用。不支持使用本地存储作为主存储的高可用。"

# da466f3482fa41629f951ec50aa2631e
#: ../../reliability.rst:79
msgid "HA for Hosts"
msgstr "主机的HA"

# df16c2c0607a4c61b64c304e0777c42c
#: ../../reliability.rst:95
msgid "Dedicated HA Hosts"
msgstr "专用的HA主机"

# ac98a112bb4a41d6a10c2e9fd2af8886
#: ../../reliability.rst:97
msgid ""
"One or more hosts can be designated for use only by HA-enabled VMs that are "
"restarting due to a host failure. Setting up a pool of such dedicated HA "
"hosts as the recovery destination for all HA-enabled VMs is useful to:"
msgstr "一台或更多台主机可以被设计为只有启用HA的VMs才能使用，这些VMs在主机出现问题的时候会重启。出于灾难恢复目的为所有启用了HA的VMs设置一个像专用HA主机这样的池是有用的："

# 1d9c1f1284e849da8df6aef8c6b79917
#: ../../reliability.rst:104
msgid ""
"Make it easier to determine which VMs have been restarted as part of the "
"CloudStack high-availability function. If a VM is running on a dedicated HA "
"host, then it must be an HA-enabled VM whose original host failed. (With one"
" exception: It is possible for an administrator to manually migrate any VM "
"to a dedicated HA host.)."
msgstr "确定哪些VMs作为CloudStack高可用功能的一部分而重启是比较容易的。如果一个VM正运行在专用的HA主机上，那么它必须是一个启用了HA的，从失败的主机上迁移过来的VM。(有一个例外：它可能是管理员手工迁移过来的任何VM。)。"

# c54e253d01d046bca426de20270f3f89
#: ../../reliability.rst:112
msgid ""
"Keep HA-enabled VMs from restarting on hosts which may be reserved for other"
" purposes."
msgstr "出于其他目的，可能保留一些启用了HA的VMs在主机上不要重启。"

# 203f11cbe6f5426c9cbb6c8e066737b4
#: ../../reliability.rst:115
msgid ""
"The dedicated HA option is set through a special host tag when the host is "
"created. To allow the administrator to dedicate hosts to only HA-enabled "
"VMs, set the global configuration variable ha.tag to the desired tag (for "
"example, \"ha\\_host\"), and restart the Management Server. Enter the value "
"in the Host Tags field when adding the host(s) that you want to dedicate to "
"HA-enabled VMs."
msgstr "当创建了主机之后，通过指定一个主机标签来设置专用HA选项。要允许管理员只给启用了HA的VMs制定专用主机，请设置全局配置变量ha.tag为想要的tag(比如， \"ha\\_host\")，并且重启管理服务器。当添加你想给启用HA的VMs配置专用主机(s\n)时，在主机标签区域中输入值。"

# ad8a1db8b7c54f3fbedd9f2ead6994d8
#: ../../reliability.rst:123
msgid ""
"If you set ha.tag, be sure to actually use that tag on at least one host in "
"your cloud. If the tag specified in ha.tag is not set for any host in the "
"cloud, the HA-enabled VMs will fail to restart after a crash."
msgstr "如果你设置ha.tag，请确认在你的云中至少有一台主机真的在使用该标签。如果在ha.tag中没有为云中的任何主机设置指定的标签，那么启用了HA的VMs在崩溃之后不会重启。"

# d286858984534e66a45c79482130eb8a
#: ../../reliability.rst:126
msgid "Primary Storage Outage and Data Loss"
msgstr "主存储故障和数据丢失"

# aa482325b164497797fcc8925e319b83
#: ../../reliability.rst:128
msgid ""
"When a primary storage outage occurs the hypervisor immediately stops all "
"VMs stored on that storage device. Guests that are marked for HA will be "
"restarted as soon as practical when the primary storage comes back on line. "
"With NFS, the hypervisor may allow the virtual machines to continue running "
"depending on the nature of the issue. For example, an NFS hang will cause "
"the guest VMs to be suspended until storage connectivity is restored.Primary"
" storage is not designed to be backed up. Individual volumes in primary "
"storage can be backed up using snapshots."
msgstr "当主存储发生故障，hypervisor 立即停止该存储设备上存储的所有虚拟机。客户机被标记为当主存储重新上线时，HA根据实际情况尽快将重新启动。使用NFS时，hypervisor 可以允许虚拟机继续运行，这取决于问题的性质。例如，NFS挂起将导致客户虚拟机暂停，直至恢复存储连接。主存储没有被设计进行备份。在主存储中的单个卷，可以使用快照备份。"

# 33fbc63d82cb4eafb2178c004fb912a1
#: ../../reliability.rst:139
msgid "Secondary Storage Outage and Data Loss"
msgstr "二级存储的故障和数据丢失"

# 2a93ea5d2f0e4da6939e8f13391dad91
#: ../../reliability.rst:141
msgid ""
"For a Zone that has only one secondary storage server, a secondary storage "
"outage will have feature level impact to the system but will not impact "
"running guest VMs. It may become impossible to create a VM with the selected"
" template for a user. A user may also not be able to save snapshots or "
"examine/restore saved snapshots. These features will automatically be "
"available when the secondary storage comes back online."
msgstr "由于一个资源域只有一个二级存储服务器，二级存储的中断将会对系统的一些功能产生影响，但不影响正在运行的客户虚拟机。可能会让用户无法选择模版来创建虚拟机。用户也可能无法保存快照，检查或恢复已保存的快照。当二级存储恢复连接后，这些功能也就可以自动恢复。"

# 0131fdfdae154752be6146df6032f176
#: ../../reliability.rst:148
msgid ""
"Secondary storage data loss will impact recently added user data including "
"templates, snapshots, and ISO images. Secondary storage should be backed up "
"periodically. Multiple secondary storage servers can be provisioned within "
"each zone to increase the scalability of the system."
msgstr "二级存储的数据丢失将会影响最近添加的用户数据，包括模版、快照、和ISO镜像。二级存储应该进行定期备份。为每个资源域提供多个二级存储服务器能够增强系统的可扩展性。"

# 32e946f31bec452b97aee852fdedbfb3
#: ../../reliability.rst:154
msgid "Database High Availability"
msgstr "数据库的高可用"

# 24f4f434b1ce4281b25606d418fccc6a
#: ../../reliability.rst:156
msgid ""
"To help ensure high availability of the databases that store the internal "
"data for CloudStack, you can set up database replication. This covers both "
"the main CloudStack database and the Usage database. Replication is achieved"
" using the MySQL connector parameters and two-way replication. Tested with "
"MySQL 5.1 and 5.5."
msgstr "为了确保存储CloudStack内部数据的数据库的高可用性，你可以设置数据库复制。这涉及到所有CloudStack主数据库和用量数据库。复制是指完全使用MySQL连接参数和双向复制。MySQL 5.1和5.5已测试通过。"

# efec316eee4b461987bf261d0d56a86c
#: ../../reliability.rst:163
msgid "How to Set Up Database Replication"
msgstr "如何设置数据库复制"

# 0817e84d25fd413cbd639d20eba36e91
#: ../../reliability.rst:165
msgid ""
"Database replication in CloudStack is provided using the MySQL replication "
"capabilities. The steps to set up replication can be found in the MySQL "
"documentation (links are provided below). It is suggested that you set up "
"two-way replication, which involves two database nodes. In this case, for "
"example, you might have node1 and node2."
msgstr "CloudStack中的数据库复制是由MySQL复制功能提供的。设置复制的步骤可在MySQL的文档中找到(链接在下面提供)。它建议你设置双向复制，涉及两个数据库节点。在这个情形下，比如，你可能有node1和node2。"

# fe0744bc687148038eea8aeed5de6c19
#: ../../reliability.rst:171
msgid ""
"You can also set up chain replication, which involves more than two nodes. "
"In this case, you would first set up two-way replication with node1 and "
"node2. Next, set up one-way replication from node2 to node3. Then set up "
"one-way replication from node3 to node4, and so on for all the additional "
"nodes."
msgstr "你同样可以设置链式复制，这涉及到多于两个节点。在这个情况下，你可以先设置node1和node2的双向复制。然后，设置node2和node3的单向复制。在设置node3和node4的单向复制，其他所有的节点依次类推。"

# 0384ce5c101a4318a81921b85dd616fb
#: ../../reliability.rst:177
msgid "References:"
msgstr "参考文献："

# c14908b4a0ea4700ab13002919e09120
#: ../../reliability.rst:181
msgid ""
"`http://dev.mysql.com/doc/refman/5.0/en/replication-howto.html "
"<http://dev.mysql.com/doc/refman/5.0/en/replication-howto.html>`_"
msgstr "`http://dev.mysql.com/doc/refman/5.0/en/replication-howto.html <http://dev.mysql.com/doc/refman/5.0/en/replication-howto.html>`_"

# 10b1becde5ca4283b66ab4115c633fcd
#: ../../reliability.rst:185
msgid ""
"`https://wikis.oracle.com/display/CommSuite/MySQL+High+Availability+and+Replication+Information+For+Calendar+Server"
" "
"<https://wikis.oracle.com/display/CommSuite/MySQL+High+Availability+and+Replication+Information+For+Calendar+Server>`_"
msgstr "`https://wikis.oracle.com/display/CommSuite/MySQL+High+Availability+and+Replication+Information+For+Calendar+Server <https://wikis.oracle.com/display/CommSuite/MySQL+High+Availability+and+Replication+Information+For+Calendar+Server>`_"

# a1a34eb9cd884a308f39baf29410a2d7
#: ../../reliability.rst:188
msgid "Configuring Database High Availability"
msgstr "配置数据库高可用"

# 037e1ed319cb45afa95431f629bb98f6
#: ../../reliability.rst:190
msgid ""
"To control the database high availability behavior, use the following "
"configuration settings in the file /etc/cloudstack/management/db.properties."
msgstr "要控制数据库高可用特性，在/etc/cloudstack/management/db.properties文件中使用以下配置设置。"

# 65be31716ae147b190ef26c95d3f20a7
#: ../../reliability.rst:194
msgid "**Required Settings**"
msgstr "**需求设置**"

# 983f7044f00b474b9377e8715f91f5d6
#: ../../reliability.rst:196
msgid "Be sure you have set the following in db.properties:"
msgstr "确定你在 db.properties中使用了以下设置："

# 7fcf4985b7104c20b8363c6d5f1b2c5c
#: ../../reliability.rst:200
msgid ""
"``db.ha.enabled``: set to true if you want to use the replication feature."
msgstr "``db.ha.enabled``：如果你想使用复制功能，请设置为true。"

# e4167706f93b47dc856a1acf6a26bd1b
#: ../../reliability.rst:203
msgid "Example: ``db.ha.enabled=true``"
msgstr "例如：``db.ha.enabled=true``"

# d4ae850e4ab24d3d988e5c2f04454c0f
#: ../../reliability.rst:207
msgid ""
"``db.cloud.slaves``: set to a comma-delimited set of slave hosts for the "
"cloud database. This is the list of nodes set up with replication. The "
"master node is not in the list, since it is already mentioned elsewhere in "
"the properties file."
msgstr "``db.cloud.slaves``：为云数据库设置多台slave主机，用逗号隔开。这是用于复制的节点清单。主节点不在列表中，因为在属性文件中的别处已经使用了它。"

# 4964061ca5f747aab4d1a379ad79e066
#: ../../reliability.rst:212
msgid "Example: ``db.cloud.slaves=node2,node3,node4``"
msgstr "例如：``db.cloud.slaves=node2,node3,node4``"

# b9de2539c2864fd28ae3e261f396f19f
#: ../../reliability.rst:216
msgid ""
"``db.usage.slaves``: set to a comma-delimited set of slave hosts for the "
"usage database. This is the list of nodes set up with replication. The "
"master node is not in the list, since it is already mentioned elsewhere in "
"the properties file."
msgstr "``db.usage.slaves``：为用量数据库设置多台slave主机，用逗号隔开。这是用于复制的节点清单。主节点不在列表中，因为在属性文件中的别处已经使用了它。"

# 2a099840b3e046b8b70eb0874e152f0c
#: ../../reliability.rst:221
msgid "Example: ``db.usage.slaves=node2,node3,node4``"
msgstr "例如：``db.usage.slaves=node2,node3,node4``"

# ecbb9cad4a2f4f6b851ab724105cf548
#: ../../reliability.rst:223
msgid "**Optional Settings**"
msgstr "**可选的设置**"

# beb50c0c502942fc93950ab5d64e62e1
#: ../../reliability.rst:225
msgid ""
"The following settings must be present in db.properties, but you are not "
"required to change the default values unless you wish to do so for tuning "
"purposes:"
msgstr "必须在db.properties中提供以下设置，但是你不用改变默认值除非你希望做一些优化："

# 88199ce67b78476db5890126b9fa443e
#: ../../reliability.rst:231
msgid ""
"``db.cloud.secondsBeforeRetryMaster``: The number of seconds the MySQL "
"connector should wait before trying again to connect to the master after the"
" master went down. Default is 1 hour. The retry might happen sooner if "
"db.cloud.queriesBeforeRetryMaster is reached first."
msgstr "``db.cloud.secondsBeforeRetryMaster``：在master宕机之后，MySQL连接器重试连接到master之前所等待的秒数。默认是1小时。如果首先达到了db.cloud.queriesBeforeRetryMaster 的限制，重试可能更早发生。"

# a6a0d838e7734aec9c8e8a441d61f582
#: ../../reliability.rst:236
msgid "Example: ``db.cloud.secondsBeforeRetryMaster=3600``"
msgstr "例如：``db.cloud.secondsBeforeRetryMaster=3600``"

# c87ff2e5eef14dc098a850ea37ab8641
#: ../../reliability.rst:240
msgid ""
"``db.cloud.queriesBeforeRetryMaster``: The minimum number of queries to be "
"sent to the database before trying again to connect to the master after the "
"master went down. Default is 5000. The retry might happen sooner if "
"db.cloud.secondsBeforeRetryMaster is reached first."
msgstr "``db.cloud.queriesBeforeRetryMaster``：在master宕机之后，重新尝试连接到master之前向数据库查询的最小次数。默认值是5000。如果首先达到了db.cloud.secondsBeforeRetryMaster的限制，重试可能更早发生。"

# 3219915768bf4a108afabb00a195ecda
#: ../../reliability.rst:245
msgid "Example: ``db.cloud.queriesBeforeRetryMaster=5000``"
msgstr "例如：``db.cloud.queriesBeforeRetryMaster=5000``"

# b67a476758de4af7b0154ae8360f24cb
#: ../../reliability.rst:249
msgid ""
"``db.cloud.initialTimeout``: Initial time the MySQL connector should wait "
"before trying again to connect to the master. Default is 3600."
msgstr "``db.cloud.initialTimeout``：在重新尝试连接至master之前，MySQL连接器等待的初始时间。默认是3600。"

# bfdaf629f4eb48c0ac92eee0b8757ccd
#: ../../reliability.rst:252
msgid "Example: ``db.cloud.initialTimeout=3600``"
msgstr "例如：``db.cloud.initialTimeout=3600``"

# 909b81bf9974499e9cc66b8a3210b542
#: ../../reliability.rst:255
msgid "Limitations on Database High Availability"
msgstr "数据库高可用性的限制"

# d4d81b0c77f7473cbef77ab8ade71f76
#: ../../reliability.rst:257
msgid ""
"The following limitations exist in the current implementation of this "
"feature."
msgstr "目前此功能的实现还存在下列限制。"

# d3fd890ab3da46e798aa4e47b67e394f
#: ../../reliability.rst:262
msgid ""
"Slave hosts can not be monitored through CloudStack. You will need to have a"
" separate means of monitoring."
msgstr "Slave主机不能被CloudStack监控。你必须有单独的监控手段。"

# 80173b87cb9e44a38c93854d4adcfa19
#: ../../reliability.rst:267
msgid ""
"Events from the database side are not integrated with the CloudStack "
"Management Server events system."
msgstr "数据库端的事件没有集成到CloudStack管理服务器事件系统。"

# 2cc19c99cbfa4e3796e358a8b8ea6365
#: ../../reliability.rst:272
msgid ""
"You must periodically perform manual clean-up of bin log files generated by "
"replication on database nodes. If you do not clean up the log files, the "
"disk can become full."
msgstr "你必须定期的执行手动清除由数据库节点复制产生的二进制log文件。如果你不清理log文件，磁盘就会被占满。"
